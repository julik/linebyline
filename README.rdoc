= linebyline

Facilitates the comparison of files and IO buffers in tests. It will report the exact differences per line and character offset, it will report if
lines are too short or too long, and so on.

To use, include it in Minitest or Test::Unit

    include LineByLine::Assertions
    
    # ... and in one of your tests
    def test_outputs_same
      ref = File.open('ref_data.txt')
      out = File.open('my_output.txt')
      assert_same_buffer ref, out
    end

The Assertions module expects the following methods on the object it is included into:

  flunk(message)
  assert(boolean)
  
so you can retrofit it to your Testing Framework Du Jour. Or you can include LineByLine itself,
and then use +compare_buffer!+ like so:
  
  include LineByLine
  
  # ... more tests
  begin
    compare_buffers! ref, out
  rescue LineByLine::NotSame => mismatch
    fail_test mismatch.message
  end


== Contributing to linebyline
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet.
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it.
* Fork the project.
* Start a feature/bugfix branch.
* Commit and push until you are happy with your contribution.
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2013 Julik Tarkhanov. See LICENSE.txt for
further details.

